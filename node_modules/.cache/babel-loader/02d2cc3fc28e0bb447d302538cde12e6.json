{"remainingRequest":"/Users/fenglin/Desktop/study/backstage/node_modules/babel-loader/lib/index.js!/Users/fenglin/Desktop/study/backstage/node_modules/eslint-loader/index.js??ref--13-0!/Users/fenglin/Desktop/study/backstage/src/api/apis.js","dependencies":[{"path":"/Users/fenglin/Desktop/study/backstage/src/api/apis.js","mtime":1591713828928},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js","mtime":1590894340264},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/babel-loader/lib/index.js","mtime":1590894340261},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/eslint-loader/index.js","mtime":1590894350444}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8g5byV5YWlIGF4aW9zCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7IC8vIOiuvue9ruivt+axguWcsOWdgAoKYXhpb3MuZGVmYXVsdHMuYmFzZVVSTCA9ICdodHRwOi8vMTI3LjAuMC4xOjUwMDAnOyAvLyAxLueZu+W9leaOpeWPowovLyBhY2NvdW50OueUqOaIt+WQjSAgcGFzc3dvcmQ65a+G56CBCgpleHBvcnQgdmFyIEFQSV9DSEVDS0xPR0lOID0gZnVuY3Rpb24gQVBJX0NIRUNLTE9HSU4oYWNjb3VudCwgcGFzc3dvcmQpIHsKICByZXR1cm4gYXhpb3MucG9zdCgnL3VzZXJzL2NoZWNrTG9naW4nLCB7CiAgICBhY2NvdW50OiBhY2NvdW50LAogICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgfSk7Cn07IC8vIDIu5re75Yqg6LSm5oi3ICAgYWNjb3VudDrnlKjmiLflkI0gIHBhc3N3b3JkOuWvhueggSAgdXNlckdyb3VwOueUqOaIt+e7hAoKZXhwb3J0IHZhciBBUElfQUREID0gZnVuY3Rpb24gQVBJX0FERChhY2NvdW50LCBwYXNzd29yZCwgdXNlckdyb3VwKSB7CiAgcmV0dXJuIGF4aW9zLnBvc3QoJy91c2Vycy9hZGQnLCB7CiAgICBhY2NvdW50OiBhY2NvdW50LAogICAgcGFzc3dvcmQ6IHBhc3N3b3JkLAogICAgdXNlckdyb3VwOiB1c2VyR3JvdXAKICB9KTsKfTsgLy8gMy7ojrflj5botKblj7fliJfooaggICBjdXJyZW50UGFnZTrlvZPliY3pobXnoIEgICBwYWdlU2l6ZTrmr4/pobXmnaHmlbAgIHtwYXJhbXM6IHvlj4LmlbAxLCDlj4LmlbAyfX0KCmV4cG9ydCB2YXIgQVBJX0xJU1QgPSBmdW5jdGlvbiBBUElfTElTVChjdXJyZW50UGFnZSwgcGFnZVNpemUpIHsKICByZXR1cm4gYXhpb3MuZ2V0KCcvdXNlcnMvbGlzdCcsIHsKICAgIHBhcmFtczogewogICAgICBjdXJyZW50UGFnZTogY3VycmVudFBhZ2UsCiAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZQogICAgfQogIH0pOwp9OyAvLyA0LuWIoOmZpOi0puWPtyBpZDppZAoKZXhwb3J0IHZhciBBUElfREVsID0gZnVuY3Rpb24gQVBJX0RFbChpZCkgewogIHJldHVybiBheGlvcy5nZXQoJy91c2Vycy9kZWwnLCB7CiAgICBwYXJhbXM6IHsKICAgICAgaWQ6IGlkCiAgICB9CiAgfSk7Cn07IC8vIDUu5om56YeP5Yig6Zmk6LSm5Y+3IGlkczropoHliKDpmaTmlbDmja7nmoRpZOe7hOaIkOeahOaVsOe7hO+8iOWtl+espuS4suagvOW8jwoKZXhwb3J0IHZhciBBUElfQkFUQ0hERUwgPSBmdW5jdGlvbiBBUElfQkFUQ0hERUwoaWRzKSB7CiAgcmV0dXJuIGF4aW9zLmdldCgnL3VzZXJzL2JhdGNoZGVsJywgewogICAgcGFyYW1zOiB7CiAgICAgIGlkczogaWRzCiAgICB9CiAgfSk7Cn07IC8vIDYu5L+u5pS56LSm5Y+3ICBpZDropoHkv67mlLnotKblj7fnmoRpZCAsYWNjb3VudDrotKblj7csdXNlckdyb3VwaWQ655So5oi357uECgpleHBvcnQgdmFyIEFQSV9FRElUID0gZnVuY3Rpb24gQVBJX0VESVQoaWQsIGFjY291bnQsIHVzZXJHcm91cCkgewogIHJldHVybiBheGlvcy5wb3N0KCcvdXNlcnMvZWRpdCcsIHsKICAgIGlkOiBpZCwKICAgIGFjY291bnQ6IGFjY291bnQsCiAgICB1c2VyR3JvdXA6IHVzZXJHcm91cAogIH0pOwp9OyAvLyA3LuajgOafpeaXp+WvhueggeaYr+WQpuato+ehriAgIG9sZFB3ZDrml6flr4bnoIEoU3RyaW5nKSAgaWQ65biQ5Y+3aWQKCmV4cG9ydCB2YXIgQVBJX0NIRUNLT0xEUFdEID0gZnVuY3Rpb24gQVBJX0NIRUNLT0xEUFdEKG9sZFB3ZCwgaWQpIHsKICByZXR1cm4gYXhpb3MuZ2V0KCcvdXNlcnMvY2hlY2tvbGRwd2QnLCB7CiAgICBwYXJhbXM6IHsKICAgICAgb2xkUHdkOiBvbGRQd2QsCiAgICAgIGlkOiBpZAogICAgfQogIH0pOwp9OyAvLyA4LuS/ruaUueWvhueggSAgbmV3UHdkCVN0cmluZ+aWsOWvhueggSAsICAg5biQ5Y+3aWQKCmV4cG9ydCB2YXIgQVBJX0VESVRQV0QgPSBmdW5jdGlvbiBBUElfRURJVFBXRChuZXdQd2QsIGlkKSB7CiAgcmV0dXJuIGF4aW9zLnBvc3QoJy91c2Vycy9lZGl0cHdkJywgewogICAgbmV3UHdkOiBuZXdQd2QsCiAgICBpZDogaWQKICB9KTsKfTsgLy8gOS7ojrflj5botKblj7fvvIjkuKrkurrkuK3lv4PvvInkv6Hmga8gIGlkOmlkCgpleHBvcnQgdmFyIEFQSV9BQ0NPVU5USU5GTyA9IGZ1bmN0aW9uIEFQSV9BQ0NPVU5USU5GTyhpZCkgewogIHJldHVybiBheGlvcy5nZXQoJy91c2Vycy9hY2NvdW50aW5mbycsIHsKICAgIHBhcmFtczogewogICAgICBpZDogaWQKICAgIH0KICB9KTsKfTsgLy8gMTAu5aS05YOP5LiK5Lyg5o6l5Y+jICAgaWQKCmV4cG9ydCB2YXIgQVBJX0FWQVRBUl9VUExPQUQgPSBmdW5jdGlvbiBBUElfQVZBVEFSX1VQTE9BRChwYXJhbSwgY29uZmlnKSB7CiAgcmV0dXJuIGF4aW9zLnBvc3QoJy91c2Vycy9hdmF0YXJfdXBsb2FkICcsIHsKICAgIHBhcmFtOiBwYXJhbSwKICAgIGNvbmZpZzogY29uZmlnCiAgfSk7Cn07IC8vIDExLumqjOivgSB0b2tlbiDmmK/lkKbov4fmnJ8gICAgdG9rZW4KCmV4cG9ydCB2YXIgQVBJX0NIRUNLVE9LRU4gPSBmdW5jdGlvbiBBUElfQ0hFQ0tUT0tFTih0b2tlbikgewogIHJldHVybiBheGlvcy5nZXQoJy91c2Vycy9jaGVja3Rva2VuJywgewogICAgcGFyYW1zOiB7CiAgICAgIHRva2VuOiB0b2tlbgogICAgfQogIH0pOwp9OyAvLyAxMi7mt7vliqDliIbnsbsgIGNhdGVOYW1lIOWIhuexu+WQjeensCAgIHN0YXRlIOaYr+WQpuWQr+eUqCAgICAKCmV4cG9ydCB2YXIgQVBJX0dPT0RTX0FERENBVEUgPSBmdW5jdGlvbiBBUElfR09PRFNfQUREQ0FURShjYXRlTmFtZSwgc3RhdGUpIHsKICByZXR1cm4gYXhpb3MucG9zdCgnL2dvb2RzL2FkZGNhdGUnLCB7CiAgICBjYXRlTmFtZTogY2F0ZU5hbWUsCiAgICBzdGF0ZTogc3RhdGUKICB9KTsKfTsgLy8gMTMu6I635Y+W5YiG57G7IC9nb29kcy9jYXRlbGlzdCAvLyBjdXJyZW50UGFnZQlJbnQJ5pivCeW9k+WJjemhtSAvLyBwYWdlU2l6ZQlJbnQJ5pivCeavj+mhteadoeaVsAoKZXhwb3J0IHZhciBBUElfR09PRFNfQ0FURUxJU1QgPSBmdW5jdGlvbiBBUElfR09PRFNfQ0FURUxJU1QoY3VycmVudFBhZ2UsIHBhZ2VTaXplKSB7CiAgcmV0dXJuIGF4aW9zLmdldCgnL2dvb2RzL2NhdGVsaXN0JywgewogICAgcGFyYW1zOiB7CiAgICAgIGN1cnJlbnRQYWdlOiBjdXJyZW50UGFnZSwKICAgICAgcGFnZVNpemU6IHBhZ2VTaXplCiAgICB9CiAgfSk7Cn07IC8vIDE0LuWIoOmZpOWIhuexuyAgL2dvb2RzL2RlbGNhdGUgCgpleHBvcnQgdmFyIEFQSV9HT09EU19ERUxDQVRFID0gZnVuY3Rpb24gQVBJX0dPT0RTX0RFTENBVEUoaWQpIHsKICByZXR1cm4gYXhpb3MuZ2V0KCcvZ29vZHMvZGVsY2F0ZScsIHsKICAgIHBhcmFtczogewogICAgICBpZDogaWQKICAgIH0KICB9KTsKfTsgLy8gMTUu5L+u5pS55YiG57G7IGlkCUludAnmmK8J5YiG57G7aWQgY2F0ZU5hbWUJU3RyaW5nCeaYrwnliIbnsbvlkI3np7Agc3RhdGUJQm9vbGVhbgnmmK8J5YiG57G754q25oCBCgpleHBvcnQgdmFyIEFQSV9HT09EU19FRElUQ0FURSA9IGZ1bmN0aW9uIEFQSV9HT09EU19FRElUQ0FURShpZCwgY2F0ZU5hbWUsIHN0YXRlKSB7CiAgcmV0dXJuIGF4aW9zLnBvc3QoJy9nb29kcy9lZGl0Y2F0ZScsIHsKICAgIGlkOiBpZCwKICAgIGNhdGVOYW1lOiBjYXRlTmFtZSwKICAgIHN0YXRlOiBzdGF0ZQogIH0pOwp9OyAvLyAxNi7mn6Xor6LmiYDmnInliIbnsbvlkI3np7AKCmV4cG9ydCB2YXIgQVBJX0dPT0RTX0NBVEVHT1JJRVMgPSBmdW5jdGlvbiBBUElfR09PRFNfQ0FURUdPUklFUygpIHsKICByZXR1cm4gYXhpb3MuZ2V0KCcvZ29vZHMvY2F0ZWdvcmllcycsIHsKICAgIHBhcmFtczoge30KICB9KTsKfTsgLy8gMTcu5ZWG5ZOB5Zu+54mH5LiK5Lyg5o6l5Y+jICBiaW5hcnkJ5pivCeS6jOi/m+WItuaVsOaNrua1gQovLyBleHBvcnQgY29uc3QgQVBJX0dPT0RTX0VESVQgPSAoaWQsY2F0ZU5hbWUsc3RhdGUpID0+IGF4aW9zLnBvc3QoJy9nb29kcy9lZGl0Y2F0ZScsIHtpZCxjYXRlTmFtZSxzdGF0ZX0pCi8vIDE4Lua3u+WKoOWVhuWTgSAgbmFtZQlTdHJpbmcJ5pivCeWVhuWTgeWQjeensCAvLyBjYXRlZ29yeQlTdHJpbmcJ5pivCeWVhuWTgeWIhuexuyAvLyBwcmljZQlTdHJpbmcJ5pivCeWVhuWTgeS7t+agvCAvLyBpbWdVcmwJU3RyaW5nCeaYrwnllYblk4Hlm77niYflnLDlnYAgLy8gZ29vZHNEZXNjCVN0cmluZwnmmK8J5ZWG5ZOB5o+P6L+wCgpleHBvcnQgdmFyIEFQSV9HT09EU19BREQgPSBmdW5jdGlvbiBBUElfR09PRFNfQUREKG5hbWUsIGNhdGVnb3J5LCBwcmljZSwgaW1nVXJsLCBnb29kc0Rlc2MpIHsKICByZXR1cm4gYXhpb3MucG9zdCgnL2dvb2RzL2FkZCcsIHsKICAgIG5hbWU6IG5hbWUsCiAgICBjYXRlZ29yeTogY2F0ZWdvcnksCiAgICBwcmljZTogcHJpY2UsCiAgICBpbWdVcmw6IGltZ1VybCwKICAgIGdvb2RzRGVzYzogZ29vZHNEZXNjCiAgfSk7Cn07IC8vIDE5LuiOt+WPluWVhuWTgeWIl+ihqCBjdXJyZW50UGFnZQlpbnQJ5pivCeW9k+WJjemhteeggSBwYWdlU2l6ZQlpbnQJ5pivCeavj+mhteadoeaVsCAgIAoKZXhwb3J0IHZhciBBUElfR09PRFNfTElTVCA9IGZ1bmN0aW9uIEFQSV9HT09EU19MSVNUKGN1cnJlbnRQYWdlLCBwYWdlU2l6ZSkgewogIHJldHVybiBheGlvcy5nZXQoJy9nb29kcy9saXN0JywgewogICAgcGFyYW1zOiB7CiAgICAgIGN1cnJlbnRQYWdlOiBjdXJyZW50UGFnZSwKICAgICAgcGFnZVNpemU6IHBhZ2VTaXplCiAgICB9CiAgfSk7Cn07IC8vIDIwLuWIoOmZpOWVhuWTgSAgCgpleHBvcnQgdmFyIEFQSV9HT09EU19ERUwgPSBmdW5jdGlvbiBBUElfR09PRFNfREVMKGlkKSB7CiAgcmV0dXJuIGF4aW9zLmdldCgnL2dvb2RzL2RlbCcsIHsKICAgIHBhcmFtczogewogICAgICBpZDogaWQKICAgIH0KICB9KTsKfTsgLy8yMS7kv67mlLnllYblk4EgbmFtZQlTdHJpbmcJ5pivCeWVhuWTgeWQjeensCBjYXRlZ29yeQlTdHJpbmcJ5pivCeWVhuWTgeWIhuexuyBwcmljZQlTdHJpbmcJ5pivCeWVhuWTgeS7t+agvCBpbWdVcmwJU3RyaW5nCeaYrwnllYblk4Hlm77niYflnLDlnYAgZ29vZHNEZXNjCVN0cmluZwnmmK8J5ZWG5ZOB5o+P6L+wIGlkCWludAnmmK8J5ZWG5ZOBSUQKCmV4cG9ydCB2YXIgQVBJX0dPT0RTX0VESVQgPSBmdW5jdGlvbiBBUElfR09PRFNfRURJVChuYW1lLCBjYXRlZ29yeSwgcHJpY2UsIGltZ1VybCwgZ29vZHNEZXNjLCBpZCkgewogIHJldHVybiBheGlvcy5wb3N0KCcvZ29vZHMvZWRpdCcsIHsKICAgIG5hbWU6IG5hbWUsCiAgICBjYXRlZ29yeTogY2F0ZWdvcnksCiAgICBwcmljZTogcHJpY2UsCiAgICBpbWdVcmw6IGltZ1VybCwKICAgIGdvb2RzRGVzYzogZ29vZHNEZXNjLAogICAgaWQ6IGlkCiAgfSk7Cn07"},{"version":3,"sources":["/Users/fenglin/Desktop/study/backstage/src/api/apis.js"],"names":["axios","defaults","baseURL","API_CHECKLOGIN","account","password","post","API_ADD","userGroup","API_LIST","currentPage","pageSize","get","params","API_DEl","id","API_BATCHDEL","ids","API_EDIT","API_CHECKOLDPWD","oldPwd","API_EDITPWD","newPwd","API_ACCOUNTINFO","API_AVATAR_UPLOAD","param","config","API_CHECKTOKEN","token","API_GOODS_ADDCATE","cateName","state","API_GOODS_CATELIST","API_GOODS_DELCATE","API_GOODS_EDITCATE","API_GOODS_CATEGORIES","API_GOODS_ADD","name","category","price","imgUrl","goodsDesc","API_GOODS_LIST","API_GOODS_DEL","API_GOODS_EDIT"],"mappings":"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","sourcesContent":["// 引入 axios\nimport axios from 'axios'\n\n// 设置请求地址\naxios.defaults.baseURL = 'http://127.0.0.1:5000'\n\n// 1.登录接口\n// account:用户名  password:密码\nexport const API_CHECKLOGIN = (account, password) => axios.post('/users/checkLogin', { account, password})\n// 2.添加账户   account:用户名  password:密码  userGroup:用户组\nexport const API_ADD = (account, password, userGroup) => axios.post('/users/add', { account, password, userGroup})\n// 3.获取账号列表   currentPage:当前页码   pageSize:每页条数  {params: {参数1, 参数2}}\nexport const API_LIST = (currentPage, pageSize) => axios.get('/users/list', { params: { currentPage, pageSize } })\n// 4.删除账号 id:id\nexport const API_DEl = (id) => axios.get('/users/del', { params: { id}})\n// 5.批量删除账号 ids:要删除数据的id组成的数组（字符串格式\nexport const API_BATCHDEL = (ids) => axios.get('/users/batchdel', { params: { ids}})\n// 6.修改账号  id:要修改账号的id ,account:账号,userGroupid:用户组\nexport const API_EDIT = (id, account, userGroup) => axios.post('/users/edit', { id, account, userGroup})\n// 7.检查旧密码是否正确   oldPwd:旧密码(String)  id:帐号id\nexport const API_CHECKOLDPWD = (oldPwd, id) => axios.get('/users/checkoldpwd', { params: { oldPwd, id }})\n// 8.修改密码  newPwd\tString新密码 ,   帐号id\nexport const API_EDITPWD = (newPwd, id) => axios.post('/users/editpwd', { newPwd, id, })\n// 9.获取账号（个人中心）信息  id:id\nexport const API_ACCOUNTINFO = (id) => axios.get('/users/accountinfo', { params: { id}})\n// 10.头像上传接口   id\nexport const API_AVATAR_UPLOAD = (param,config) => axios.post('/users/avatar_upload ',{ param ,config})\n// 11.验证 token 是否过期    token\nexport const API_CHECKTOKEN =(token)=>axios.get('/users/checktoken',{params:{token}})\n// 12.添加分类  cateName 分类名称   state 是否启用    \nexport const API_GOODS_ADDCATE = (cateName,state) => axios.post('/goods/addcate', {cateName,state})\n// 13.获取分类 /goods/catelist // currentPage\tInt\t是\t当前页 // pageSize\tInt\t是\t每页条数\nexport const API_GOODS_CATELIST = (currentPage,pageSize\t) => axios.get('/goods/catelist',{ params: { currentPage,pageSize}})\n// 14.删除分类  /goods/delcate \nexport const API_GOODS_DELCATE = (id) => axios.get('/goods/delcate',{ params: {id}})\n// 15.修改分类 id\tInt\t是\t分类id cateName\tString\t是\t分类名称 state\tBoolean\t是\t分类状态\nexport const API_GOODS_EDITCATE = (id,cateName,state) => axios.post('/goods/editcate', {id,cateName,state})\n// 16.查询所有分类名称\nexport const API_GOODS_CATEGORIES = () => axios.get('/goods/categories',{ params: {}})\n// 17.商品图片上传接口  binary\t是\t二进制数据流\n// export const API_GOODS_EDIT = (id,cateName,state) => axios.post('/goods/editcate', {id,cateName,state})\n// 18.添加商品  name\tString\t是\t商品名称 // category\tString\t是\t商品分类 // price\tString\t是\t商品价格 // imgUrl\tString\t是\t商品图片地址 // goodsDesc\tString\t是\t商品描述\nexport const API_GOODS_ADD = (name,category\t,price,imgUrl,goodsDesc) => axios.post('/goods/add', {name,category\t,price,imgUrl,goodsDesc})\n// 19.获取商品列表 currentPage\tint\t是\t当前页码 pageSize\tint\t是\t每页条数   \nexport const API_GOODS_LIST = (currentPage,pageSize) => axios.get('/goods/list',{ params: {currentPage,pageSize}})\n// 20.删除商品  \nexport const API_GOODS_DEL = (id) => axios.get('/goods/del',{ params: {id}})\n//21.修改商品 name\tString\t是\t商品名称 category\tString\t是\t商品分类 price\tString\t是\t商品价格 imgUrl\tString\t是\t商品图片地址 goodsDesc\tString\t是\t商品描述 id\tint\t是\t商品ID\nexport const API_GOODS_EDIT= (name,category,price,imgUrl,goodsDesc,id) => axios.post('/goods/edit', {name,category,price,imgUrl,goodsDesc,id})\n\n\n\n\n\n\n\n\n\n\n\n"]}]}