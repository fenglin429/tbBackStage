{"remainingRequest":"/Users/fenglin/Desktop/study/backstage/node_modules/thread-loader/dist/cjs.js!/Users/fenglin/Desktop/study/backstage/node_modules/babel-loader/lib/index.js!/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fenglin/Desktop/study/backstage/src/pages/index/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fenglin/Desktop/study/backstage/src/pages/index/Home.vue","mtime":1591872541698},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js","mtime":1590894340264},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/thread-loader/dist/cjs.js","mtime":1590894340251},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/babel-loader/lib/index.js","mtime":1590894340261},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js","mtime":1590894340264},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js","mtime":1590894353459}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gMS7lvJXlhaUKaW1wb3J0IGVjaGFydHMgZnJvbSAnZWNoYXJ0cyc7CmltcG9ydCB7IEFQSV9PUkRFUl9UT1RBTERBVEEgfSBmcm9tICJAL2FwaS9hcGlzIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0b2RheU9yZGVyOiAwLAogICAgICB0b3RhbEFtb3VudDogMCwKICAgICAgdG90YWxPcmRlcjogMCwKICAgICAgdG90YXlBbW91bnQ6IDAKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB2YXIgbXlDaGFydHMgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215Q2hhcnRzJykpOyAvLyDlvIDlkK/lnIjlnIjlnIblnIYKCiAgICBteUNoYXJ0cy5zaG93TG9hZGluZygpOyAvLyAgICAgICBhbW91bnREYXRhOiAoNykgWzIyMCwgMjgyLCAxOTEsIDIzNCwgMjkwLCAzMzAsIDMxMF0KICAgIC8vIG9yZGVyRGF0YTogKDcpIFsxMjAsIDEzMiwgMTAxLCAxMzQsIDkwLCAyMzAsIDIxMF0KICAgIC8vIHRvZGF5T3JkZXI6IDE4OQogICAgLy8gdG90YWxBbW91bnQ6IDIwMjQ2NgogICAgLy8gdG90YWxPcmRlcjogNTQ4NgogICAgLy8gdG90YXlBbW91bnQ6IDIxODkKCiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgQVBJX09SREVSX1RPVEFMREFUQSgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHZhciBfcmVzJGRhdGEgPSByZXMuZGF0YSwKICAgICAgICAgICAgeERhdGEgPSBfcmVzJGRhdGEueERhdGEsCiAgICAgICAgICAgIG9yZGVyRGF0YSA9IF9yZXMkZGF0YS5vcmRlckRhdGEsCiAgICAgICAgICAgIGFtb3VudERhdGEgPSBfcmVzJGRhdGEuYW1vdW50RGF0YSwKICAgICAgICAgICAgdG9kYXlPcmRlciA9IF9yZXMkZGF0YS50b2RheU9yZGVyLAogICAgICAgICAgICB0b3RhbEFtb3VudCA9IF9yZXMkZGF0YS50b3RhbEFtb3VudCwKICAgICAgICAgICAgdG90YWxPcmRlciA9IF9yZXMkZGF0YS50b3RhbE9yZGVyLAogICAgICAgICAgICB0b3RheUFtb3VudCA9IF9yZXMkZGF0YS50b3RheUFtb3VudDsKICAgICAgICBfdGhpcy50b2RheU9yZGVyID0gdG9kYXlPcmRlciwgX3RoaXMudG90YWxBbW91bnQgPSB0b3RhbEFtb3VudCwgX3RoaXMudG90YWxPcmRlciA9IHRvdGFsT3JkZXIsIF90aGlzLnRvdGF5QW1vdW50ID0gdG90YXlBbW91bnQ7IC8vIGNvbnNvbGUubG9nKHJlcyk7CgogICAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICB0ZXh0OiAn5pWw5o2u57uf6K6hJwogICAgICAgICAgfSwKICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnCiAgICAgICAgICB9LAogICAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICAgIGRhdGE6IFsn6YKu5Lu26JCl6ZSAJywgJ+iBlOebn+W5v+WRiicsICfop4bpopHlub/lkYonLCAn55u05o6l6K6/6ZeuJywgJ+aQnOe0ouW8leaTjiddCiAgICAgICAgICB9LAogICAgICAgICAgZ3JpZDogewogICAgICAgICAgICBsZWZ0OiAnMyUnLAogICAgICAgICAgICByaWdodDogJzQlJywKICAgICAgICAgICAgYm90dG9tOiAnMyUnLAogICAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgICBzYXZlQXNJbWFnZToge30KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHhBeGlzOiB7CiAgICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwKICAgICAgICAgICAgZGF0YTogeERhdGEKICAgICAgICAgIH0sCiAgICAgICAgICB5QXhpczogewogICAgICAgICAgICB0eXBlOiAndmFsdWUnCiAgICAgICAgICB9LAogICAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgICBuYW1lOiAn6K6i5Y2V5pWw5o2uJywKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBzdGFjazogJ+aAu+mHjycsCiAgICAgICAgICAgIGRhdGE6IG9yZGVyRGF0YQogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAn6YeR6aKd5pWw5o2uJywKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBzdGFjazogJ+aAu+mHjycsCiAgICAgICAgICAgIGRhdGE6IGFtb3VudERhdGEKICAgICAgICAgIH1dCiAgICAgICAgfTsKICAgICAgICBteUNoYXJ0cy5zZXRPcHRpb24ob3B0aW9uKTsgLy8g5byA5ZCv5ZyI5ZyI5ZyG5ZyGCgogICAgICAgIG15Q2hhcnRzLmhpZGVMb2FkaW5nKCk7CiAgICAgIH0pOwogICAgfSwgMTAwMCk7CiAgfQp9Ow=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA,OAAA,OAAA,MAAA,SAAA;AACA,SACA,mBADA,QAEA,YAFA;AAGA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,CADA;AAEA,MAAA,WAAA,EAAA,CAFA;AAGA,MAAA,UAAA,EAAA,CAHA;AAIA,MAAA,WAAA,EAAA;AAJA,KAAA;AAMA,GARA;AASA,EAAA,OATA,qBASA;AAAA;;AACA,QAAA,QAAA,GAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,UAAA,CAAA,CAAA,CADA,CAEA;;AACA,IAAA,QAAA,CAAA,WAAA,GAHA,CAIA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAA,UAAA,CAAA,YAAA;AACA,MAAA,mBAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AAAA,wBASA,GAAA,CAAA,IATA;AAAA,YAEA,KAFA,aAEA,KAFA;AAAA,YAGA,SAHA,aAGA,SAHA;AAAA,YAIA,UAJA,aAIA,UAJA;AAAA,YAKA,UALA,aAKA,UALA;AAAA,YAMA,WANA,aAMA,WANA;AAAA,YAOA,UAPA,aAOA,UAPA;AAAA,YAQA,WARA,aAQA,WARA;AAUA,QAAA,KAAA,CAAA,UAAA,GAAA,UAAA,EACA,KAAA,CAAA,WAAA,GAAA,WADA,EAEA,KAAA,CAAA,UAAA,GAAA,UAFA,EAGA,KAAA,CAAA,WAAA,GAAA,WAHA,CAVA,CAcA;;AACA,YAAA,MAAA,GAAA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WADA;AAIA,UAAA,OAAA,EAAA;AACA,YAAA,OAAA,EAAA;AADA,WAJA;AAOA,UAAA,MAAA,EAAA;AACA,YAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA;AADA,WAPA;AAUA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,EAAA,IADA;AAEA,YAAA,KAAA,EAAA,IAFA;AAGA,YAAA,MAAA,EAAA,IAHA;AAIA,YAAA,YAAA,EAAA;AAJA,WAVA;AAgBA,UAAA,OAAA,EAAA;AACA,YAAA,OAAA,EAAA;AACA,cAAA,WAAA,EAAA;AADA;AADA,WAhBA;AAqBA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA,UADA;AAEA,YAAA,WAAA,EAAA,KAFA;AAGA,YAAA,IAAA,EAAA;AAHA,WArBA;AA0BA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WA1BA;AA6BA,UAAA,MAAA,EAAA,CAAA;AACA,YAAA,IAAA,EAAA,MADA;AAEA,YAAA,IAAA,EAAA,MAFA;AAGA,YAAA,KAAA,EAAA,IAHA;AAIA,YAAA,IAAA,EAAA;AAJA,WAAA,EAMA;AACA,YAAA,IAAA,EAAA,MADA;AAEA,YAAA,IAAA,EAAA,MAFA;AAGA,YAAA,KAAA,EAAA,IAHA;AAIA,YAAA,IAAA,EAAA;AAJA,WANA;AA7BA,SAAA;AA2CA,QAAA,QAAA,CAAA,SAAA,CAAA,MAAA,EA1DA,CA2DA;;AACA,QAAA,QAAA,CAAA,WAAA;AACA,OA7DA;AA8DA,KA/DA,EA+DA,IA/DA,CAAA;AAqEA;AAzFA,CAAA","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"6\">\n        <el-card shadow=\"never\">总订单:\n          <span>{{totalOrder}}</span>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card shadow=\"never\">总销售额:\n        <span>{{totalAmount}}元</span>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card shadow=\"never\">\n          今日订单数:\n        <span>{{todayOrder}}</span>\n\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card shadow=\"never\">今日销售额:\n        <span>{{totayAmount}}元</span>\n        </el-card>\n      </el-col>\n    </el-row>\n    <div id=\"myCharts\" style=\"width: 1000px;height: 400px;\">\n    </div>\n  </div>\n</template>\n\n<script>\n  // 1.引入\n  import echarts from 'echarts'\n  import {\n    API_ORDER_TOTALDATA\n  } from \"@/api/apis\";\n  export default {\n    data() {\n      return {\n        todayOrder: 0,\n        totalAmount: 0,\n        totalOrder: 0,\n        totayAmount: 0\n      }\n    },\n    mounted() {\n      var myCharts = echarts.init(document.getElementById('myCharts'));\n      // 开启圈圈圆圆\n      myCharts.showLoading()\n      //       amountData: (7) [220, 282, 191, 234, 290, 330, 310]\n      // orderData: (7) [120, 132, 101, 134, 90, 230, 210]\n      // todayOrder: 189\n      // totalAmount: 202466\n      // totalOrder: 5486\n      // totayAmount: 2189\n\n      setTimeout(() => {\n        API_ORDER_TOTALDATA().then(res => {\n          let {\n            xData,\n            orderData,\n            amountData,\n            todayOrder,\n            totalAmount,\n            totalOrder,\n            totayAmount\n          } = res.data\n          this.todayOrder=todayOrder,\n          this.totalAmount=totalAmount,\n          this.totalOrder=totalOrder,\n          this.totayAmount=totayAmount\n          // console.log(res);\n          let option = {\n            title: {\n              text: '数据统计'\n            },\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {\n              data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {}\n              }\n            },\n            xAxis: {\n              type: 'category',\n              boundaryGap: false,\n              data: xData\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [{\n                name: '订单数据',\n                type: 'line',\n                stack: '总量',\n                data: orderData\n              },\n              {\n                name: '金额数据',\n                type: 'line',\n                stack: '总量',\n                data: amountData\n              }\n            ]\n          };\n          myCharts.setOption(option);\n          // 开启圈圈圆圆\n          myCharts.hideLoading()\n        })\n      }, 1000);\n\n\n\n\n\n    },\n\n\n\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/pages/index"}]}