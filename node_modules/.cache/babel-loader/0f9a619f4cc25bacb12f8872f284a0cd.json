{"remainingRequest":"/Users/fenglin/Desktop/study/backstage/node_modules/babel-loader/lib/index.js!/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fenglin/Desktop/study/backstage/src/pages/index/commodity/Classify.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fenglin/Desktop/study/backstage/src/pages/index/commodity/Classify.vue","mtime":1591773394936},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js","mtime":1590894340264},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/babel-loader/lib/index.js","mtime":1590894340261},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js","mtime":1590894340264},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js","mtime":1590894353459}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IEFQSV9HT09EU19BRERDQVRFLCBBUElfR09PRFNfQ0FURUxJU1QsIEFQSV9HT09EU19ERUxDQVRFLCBBUElfR09PRFNfRURJVENBVEUgfSBmcm9tICJAL2FwaS9hcGlzIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB7CiAgICAgICAgaWQ6ICIiLAogICAgICAgIHN0YXRlOiAnJywKICAgICAgICBjYXRlTmFtZTogIiIKICAgICAgfSwKICAgICAgLy8g56ys5Yeg6aG1CiAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICAvLyDmr4/pobXmmL7npLrlh6DmnaEKICAgICAgcGFnZVNpemU6ICc1JywKICAgICAgbmFtZTogIiIsCiAgICAgIC8vIOaAu+adoeaVsAogICAgICB0b3RhbDogMCwKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgZGVsaXZlcnk6IGZhbHNlLAogICAgICBmb3JtTGFiZWxXaWR0aDogJzEyMHB4JywKICAgICAgLy8g5qih5oCB5qGG5piv5ZCm5pi+56S6CiAgICAgIGRpYWxvZ0Zvcm1WaXNpYmxlOiBmYWxzZSwKICAgICAgLy8gbWFwMk9iagogICAgICBkaWFsb2dGb3JtVmlzaWJsZTRFZGl0OiBmYWxzZSwKICAgICAgdmFsdWU6ICcxMDAnLAogICAgICB2YWx1ZTI6ICcnCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy8g57yW6L6RCiAgICBhZmZpcm1FZGl0X2J0bjogZnVuY3Rpb24gYWZmaXJtRWRpdF9idG4oKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnZhbHVlMiA9IHRoaXMuZm9ybS5zdGF0ZSA9PSBmYWxzZSA/ICdmYWxzZScgOiAndHJ1ZSc7CiAgICAgIEFQSV9HT09EU19FRElUQ0FURSh0aGlzLmZvcm0uaWQsIHRoaXMuZm9ybS5jYXRlTmFtZSwgdGhpcy52YWx1ZTIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIC8vIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT0gMCkgewogICAgICAgICAgLy8gICAvLyDpmpDol4/mqKHmgIHmoYYKICAgICAgICAgIF90aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlNEVkaXQgPSBmYWxzZTsKCiAgICAgICAgICBfdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgICAgbWVzc2FnZTogIue8lui+keaIkOWKn34iLAogICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKGRvbmUpIHsKICAgICAgdGhpcy4kY29uZmlybSgi56Gu6K6k5YWz6Zet77yfIikudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgZG9uZSgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7fSk7CiAgICB9LAogICAgc3RhdGVDaGFuZ2U6IGZ1bmN0aW9uIHN0YXRlQ2hhbmdlKCkgey8vIGNvbnNvbGUubG9nKHRoaXMuZm9ybSkKICAgIH0sCiAgICAvLyDmmL7npLrmt7vliqDmqKHmgIHmoYYKICAgIGFkZF9idG46IGZ1bmN0aW9uIGFkZF9idG4oKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKDEpOwogICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBhZGRfY2xhc3NpZnlfYnRuOiBmdW5jdGlvbiBhZGRfY2xhc3NpZnlfYnRuKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIC8vIGNvbnNvbGUubG9nKDEpOwogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLm5hbWUpOwogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnZhbHVlKTsKICAgICAgdmFyIHN0YXRlID0gdGhpcy52YWx1ZSA9PSAxID8gJ3RydWUnIDogJ2ZhbHNlJzsKICAgICAgaWYgKHRoaXMubmFtZSA9PSAnJykgcmV0dXJuOwogICAgICBBUElfR09PRFNfQUREQ0FURSh0aGlzLm5hbWUsIHN0YXRlKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXMuZGF0YS5jb2RlKTsKICAgICAgICBpZiAocmVzLmRhdGEuY29kZSA9PSAwKSB7CiAgICAgICAgICAvLyAg6ZqQ6JeP5qih5oCB5qGGCiAgICAgICAgICBfdGhpczIuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZTsKCiAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiAn5re75Yqg5oiQ5YqfficsCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvLyDliIbpobU65Yqo5oCB5q+P6aG15pi+56S65p2h5pWwCiAgICBoYW5kbGVTaXplQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVTaXplQ2hhbmdlKHZhbCkgewogICAgICAvLyBjb25zb2xlLmxvZyhgJHt2YWx9YCk7CiAgICAgIHRoaXMucGFnZVNpemUgPSB2YWw7IC8v5Yqo5oCB5pS55Y+YCiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucGFnZVNpemUpOwoKICAgICAgdGhpcy5yZWZyZXNoKHRoaXMuY3VycmVudFBhZ2UpOyAvLyDmlLnlj5jkuYvlkI7lupTor6XlgZznlZnlnKjlvZPliY3nmoTpobXpnaIKICAgICAgLy8gdGhpcy5yZWZyZXNoKHRoaXMucGFnZVNpemUpCiAgICB9LAogICAgLy8g5YiG6aG1OuWKqOaAgeW9k+WJjemhtSznrKzlh6DpobUKICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUN1cnJlbnRDaGFuZ2UodmFsKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKGAke3ZhbH1gKTsKICAgICAgLy/liqjmgIHmlLnlj5g65q+P6aG15aSa5bCR5p2hCiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSB2YWw7IC8vIGNvbnNvbGUubG9nKCB0aGlzLmN1cnJlbnRQYWdlICk7CgogICAgICB0aGlzLnJlZnJlc2godGhpcy5jdXJyZW50UGFnZSk7IC8vIHRoaXMucmVmcmVzaCh0aGlzLmN1cnJlbnRQYWdlKQogICAgfSwKICAgIHJlZnJlc2g6IGZ1bmN0aW9uIHJlZnJlc2goKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgQVBJX0dPT0RTX0NBVEVMSVNUKHRoaXMuY3VycmVudFBhZ2UsIHRoaXMucGFnZVNpemUpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMy50b3RhbCA9IHJlcy5kYXRhLnRvdGFsOwogICAgICAgIF90aGlzMy50YWJsZURhdGEgPSByZXMuZGF0YS5kYXRhOwoKICAgICAgICBfdGhpczMudGFibGVEYXRhLmZvckVhY2goZnVuY3Rpb24gKGkpIHsKICAgICAgICAgIGkuc3RhdGUgPSBpLnN0YXRlID09IDEgPyB0cnVlIDogZmFsc2U7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZURlbGV0ZTogZnVuY3Rpb24gaGFuZGxlRGVsZXRlKGluZGV4LCByb3cpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLiRjb25maXJtKCfmraTmk43kvZzlsIbmsLjkuYXliKDpmaTor6XmlbDmja4sIOaYr+WQpue7p+e7rT8nLCAn5o+Q56S6JywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgQVBJX0dPT0RTX0RFTENBVEUocm93LmlkKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09IDApIHsKICAgICAgICAgICAgLy8g6YeN5paw5riy5p+TCiAgICAgICAgICAgIF90aGlzNC5yZWZyZXNoKCk7CgogICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgICAgICBtZXNzYWdlOiAi5Yig6Zmk5oiQ5YqffiIsCiAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KTsgLy8gY29uc29sZS5sb2cocm93LmlkKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnBhZ2VTaXplKQogICAgLy8gY29uc29sZS5sb2codGhpcy5jdXJyZW50UGFnZSk7CiAgICB0aGlzLnJlZnJlc2godGhpcy5jdXJyZW50UGFnZSk7IC8vIHZhciBhcnI9dGhpcy50YWJsZURhdGEuZmlsdGVyKGl0ZW09PnsKICAgIC8vICAgcmV0dXJuICBpdGVtCiAgICAvLyB9KQogIH0KfTs="},{"version":3,"sources":["Classify.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-card class=\"box-card\">\n    <div slot=\"header\" class=\"clearfix\">\n      <span>商品分类</span>\n      <el-button style=\"float: right; padding: 3px 0\" @click='add_btn' type=\"text\">添加分类</el-button>\n      <!-- 添加分类的模态框 -->\n      <el-dialog title=\"添加分类\" :visible.sync=\"dialogFormVisible\">\n        <el-form>\n          <el-form-item label=\"分类名称\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"name\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"是否启用\" :label-width=\"formLabelWidth\">\n            <el-tooltip placement=\"top\">\n              <!-- slot-scope=\"scope\" -->\n              <el-switch v-model=\"value\" active-color=\"#13ce66\" inactive-color=\"#ff4949\">\n              </el-switch>\n            </el-tooltip>\n            <!-- <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input> -->\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"add_classify_btn\">确 定</el-button>\n        </div>\n      </el-dialog>\n    </div>\n    <!-- 分类的表格 -->\n    <el-table :data=\"tableData\" stripe style=\"width: 100%\">\n      <el-table-column prop=\"id\" label=\"序号\" width=\"180\"></el-table-column>\n      <el-table-column prop=\"cateName\" label=\"分类名称\" width=\"180\"></el-table-column>\n      <el-table-column label=\"是否启用\">\n        <!-- :content=\"value\"  -->\n        <!-- <el-tooltip placement=\"top\">  row.flag -->\n        <!-- 表格的滑动按钮 -->\n        <template slot-scope=\"scope\">\n          <el-switch v-model=\"scope.row.state\" active-color=\"#13ce66\" inactive-color=\"#ff4949\">\n          </el-switch>\n        </template>\n        <!-- </el-tooltip> -->\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n          <!-- 编辑的模态框 -->\n          <el-dialog title=\"编辑商品信息\" :visible.sync=\"dialogFormVisible4Edit\">\n            <el-form :model=\"form\">\n              <el-form-item label=\"分类名称\" :label-width=\"formLabelWidth\">\n                <el-input v-model=\"form.cateName\"></el-input>\n              </el-form-item>\n              <!-- form.userGroup -->\n              <el-form-item label=\"分类状态\" :label-width=\"formLabelWidth\">\n                <el-switch v-model=\"form.state\" @change=\"stateChange\" active-color=\"#13ce66\" inactive-color=\"#ff4949\">\n                </el-switch>\n              </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n              <el-button @click=\"dialogFormVisible4Edit = false\">取 消</el-button>\n              <el-button type=\"primary\" @click='affirmEdit_btn'>确 定</el-button>\n            </div>\n          </el-dialog>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- 分页器:当前页码,每页条数-->\n    <!--page-sizes:每页条数的数组,page-sizes:可以选择的每页显示的条数,page-size: 默认每页显示的条数,pager:当前页-->\n    <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"currentPage\"\n      :page-sizes=\"[5, 10, 15]\" :page-size=\"5\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n    </el-pagination>\n\n  </el-card>\n\n</template>\n\n<script>\n  import { API_GOODS_ADDCATE, API_GOODS_CATELIST, API_GOODS_DELCATE, API_GOODS_EDITCATE } from \"@/api/apis\";\n  export default {\n    data() {\n      return {\n        form: {\n          id: \"\",\n          state: '',\n          cateName: \"\",\n        },\n        // 第几页\n        currentPage: 1,\n        // 每页显示几条\n        pageSize: '5',\n        name: \"\",\n        // 总条数\n        total: 0,\n        tableData: [],\n        delivery: false,\n        formLabelWidth: '120px',\n        // 模态框是否显示\n        dialogFormVisible: false,\n        // map2Obj\n        dialogFormVisible4Edit: false,\n        value: '100',\n        value2: ''\n      };\n    },\n\n    methods: {\n      // 编辑\n      affirmEdit_btn() {\n        this.value2 = this.form.state == false ? 'false' : 'true'\n        API_GOODS_EDITCATE(this.form.id, this.form.cateName, this.value2).then(res => {\n          // console.log(res);\n          if (res.data.code == 0) {\n            //   // 隐藏模态框\n            this.dialogFormVisible4Edit = false;\n            this.$message({\n              showClose: true,\n              message: \"编辑成功~\",\n              type: \"success\"\n            });\n          }\n        })\n      },\n      handleClose(done) {\n        this.$confirm(\"确认关闭？\")\n          .then(() => {\n            done();\n          })\n          .catch(() => {});\n      },\n      stateChange() {\n\n        // console.log(this.form)\n      },\n      // 显示添加模态框\n      add_btn() {\n        // console.log(1);\n        this.dialogFormVisible = true\n      },\n      add_classify_btn() {\n        // console.log(1);\n        // console.log(this.name);\n        // console.log(this.value);\n        let state = this.value == 1 ? 'true' : 'false';\n        if (this.name == '') return;\n        API_GOODS_ADDCATE(this.name, state).then(res => {\n          // console.log(res.data.code);\n          if (res.data.code == 0) {\n            //  隐藏模态框\n            this.dialogFormVisible = false\n            this.$message({\n              message: '添加成功~',\n              type: 'success'\n            });\n          }\n        })\n      },\n      // 分页:动态每页显示条数\n      handleSizeChange(val) {\n        // console.log(`${val}`);\n        this.pageSize = val; //动态改变\n        // console.log(this.pageSize);\n        this.refresh(this.currentPage)\n        // 改变之后应该停留在当前的页面\n        // this.refresh(this.pageSize)\n      },\n      // 分页:动态当前页,第几页\n      handleCurrentChange(val) {\n        // console.log(`${val}`);\n        //动态改变:每页多少条\n        this.currentPage = val;\n        // console.log( this.currentPage );\n        this.refresh(this.currentPage)\n        // this.refresh(this.currentPage)\n\n      },\n      \n      refresh() {\n        API_GOODS_CATELIST(this.currentPage, this.pageSize).then(res => {\n          this.total = res.data.total\n          this.tableData = res.data.data\n          this.tableData.forEach(i => {\n            i.state = i.state == 1 ? true : false\n          });\n        })\n      },\n      handleDelete(index, row) {\n        this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          API_GOODS_DELCATE(row.id).then(res => {\n            if (res.data.code == 0) {\n              // 重新渲染\n              this.refresh()\n              this.$message({\n                showClose: true,\n                message: \"删除成功~\",\n                type: \"success\"\n              });\n            }\n          });\n        })\n        // console.log(row.id);\n      },\n    },\n    created() {\n      // console.log(this.pageSize)\n      // console.log(this.currentPage);\n      this.refresh(this.currentPage)\n      // var arr=this.tableData.filter(item=>{\n      //   return  item\n      // })\n    },\n\n  };\n</script>\n\n<style lang=\"less\" >\n    .el-input__inner {\n      width: 100px ;\n    }\n\n</style>"],"sourceRoot":"src/pages/index/commodity"}]}