{"remainingRequest":"/Users/fenglin/Desktop/study/backstage/node_modules/thread-loader/dist/cjs.js!/Users/fenglin/Desktop/study/backstage/node_modules/babel-loader/lib/index.js!/Users/fenglin/Desktop/study/backstage/node_modules/eslint-loader/index.js??ref--13-0!/Users/fenglin/Desktop/study/backstage/src/api/apis.js","dependencies":[{"path":"/Users/fenglin/Desktop/study/backstage/src/api/apis.js","mtime":1591945313705},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js","mtime":1590894340264},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/thread-loader/dist/cjs.js","mtime":1590894340251},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/babel-loader/lib/index.js","mtime":1590894340261},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/eslint-loader/index.js","mtime":1590894350444}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/fenglin/Desktop/study/backstage/src/api/apis.js"],"names":["axios","SERVE_IP","SERVE_SHOP","defaults","baseURL","API_CHECKLOGIN","account","password","post","API_ADD","userGroup","API_LIST","currentPage","pageSize","get","params","API_DEl","id","API_BATCHDEL","ids","API_EDIT","API_CHECKOLDPWD","oldPwd","API_EDITPWD","newPwd","API_ACCOUNTINFO","API_AVATAR_UPLOAD","param","config","API_CHECKTOKEN","token","API_GOODS_ADDCATE","cateName","state","API_GOODS_CATELIST","API_GOODS_DELCATE","API_GOODS_EDITCATE","API_GOODS_CATEGORIES","API_GOODS_ADD","name","category","price","imgUrl","goodsDesc","API_GOODS_LIST","API_GOODS_DEL","API_GOODS_EDIT","API_ORDER_LIST","orderNo","consignee","phone","orderState","date","API_ORDER_SEARCH","API_ORDER_DETAIL","API_ORDER_EDIT","orderTime","deliverAddress","deliveryTime","remarks","orderAmount","API_SHOP_INFO","API_SHOP_UPLOAD","API_SHOP_EDIT","API_ORDER_TOTALDATA","API_ORDER_ORDERTOTAL"],"mappings":"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","sourcesContent":["// 引入 axios\nimport axios from 'axios'\n// 服务器 ip 地址\nexport const SERVE_IP='http://127.0.0.1:5000'\n// 商品上传地址\nexport const SERVE_SHOP= SERVE_IP+'upload/shop/'\n\n\n// 设置请求地址\naxios.defaults.baseURL = SERVE_IP\n\n// 1.登录接口\n// account:用户名  password:密码\nexport const API_CHECKLOGIN = (account, password) => axios.post('/users/checkLogin', { account, password})\n// 2.添加账户   account:用户名  password:密码  userGroup:用户组\nexport const API_ADD = (account, password, userGroup) => axios.post('/users/add', { account, password, userGroup})\n// 3.获取账号列表   currentPage:当前页码   pageSize:每页条数  {params: {参数1, 参数2}}\nexport const API_LIST = (currentPage, pageSize) => axios.get('/users/list', { params: { currentPage, pageSize } })\n// 4.删除账号 id:id\nexport const API_DEl = (id) => axios.get('/users/del', { params: { id}})\n// 5.批量删除账号 ids:要删除数据的id组成的数组（字符串格式\nexport const API_BATCHDEL = (ids) => axios.get('/users/batchdel', { params: { ids}})\n// 6.修改账号  id:要修改账号的id ,account:账号,userGroupid:用户组\nexport const API_EDIT = (id, account, userGroup) => axios.post('/users/edit', { id, account, userGroup})\n// 7.检查旧密码是否正确   oldPwd:旧密码(String)  id:帐号id\nexport const API_CHECKOLDPWD = (oldPwd, id) => axios.get('/users/checkoldpwd', { params: { oldPwd, id }})\n// 8.修改密码  newPwd\tString新密码 ,   帐号id\nexport const API_EDITPWD = (newPwd, id) => axios.post('/users/editpwd', { newPwd, id, })\n// 9.获取账号（个人中心）信息  id:id\nexport const API_ACCOUNTINFO = (id) => axios.get('/users/accountinfo', { params: { id}})\n// 10.头像上传接口   id\nexport const API_AVATAR_UPLOAD = (param,config) => axios.post('/users/avatar_upload ',{ param ,config})\n// 11.验证 token 是否过期    token\nexport const API_CHECKTOKEN =(token)=>axios.get('/users/checktoken',{params:{token}})\n// 12.添加分类  cateName 分类名称   state 是否启用    \nexport const API_GOODS_ADDCATE = (cateName,state) => axios.post('/goods/addcate', {cateName,state})\n// 13.获取分类 /goods/catelist // currentPage\tInt\t是\t当前页 // pageSize\tInt\t是\t每页条数\nexport const API_GOODS_CATELIST = (currentPage,pageSize\t) => axios.get('/goods/catelist',{ params: { currentPage,pageSize}})\n// 14.删除分类  /goods/delcate \nexport const API_GOODS_DELCATE = (id) => axios.get('/goods/delcate',{ params: {id}})\n// 15.修改分类 id\tInt\t是\t分类id cateName\tString\t是\t分类名称 state\tBoolean\t是\t分类状态\nexport const API_GOODS_EDITCATE = (id,cateName,state) => axios.post('/goods/editcate', {id,cateName,state})\n// 16.查询所有分类名称\nexport const API_GOODS_CATEGORIES = () => axios.get('/goods/categories',{ params: {}})\n// 17.商品图片上传接口  binary\t是\t二进制数据流\n// 18.添加商品  name\tString\t是\t商品名称 // category\tString\t是\t商品分类 // price\tString\t是\t商品价格 // imgUrl\tString\t是\t商品图片地址 // goodsDesc\tString\t是\t商品描述\nexport const API_GOODS_ADD = (name,category\t,price,imgUrl,goodsDesc) => axios.post('/goods/add', {name,category\t,price,imgUrl,goodsDesc})\n// 19.获取商品列表 currentPage\tint\t是\t当前页码 pageSize\tint\t是\t每页条数   \nexport const API_GOODS_LIST = (currentPage,pageSize) => axios.get('/goods/list',{ params: {currentPage,pageSize}})\n// 20.删除商品  \nexport const API_GOODS_DEL = (id) => axios.get('/goods/del',{ params: {id}})\n//21.修改商品 name\tString\t是\t商品名称 category\tString\t是\t商品分类 price\tString\t是\t商品价格 imgUrl\tString\t是\t商品图片地址 goodsDesc\tString\t是\t商品描述 id\tint\t是\t商品ID\nexport const API_GOODS_EDIT= (name,category,price,imgUrl,goodsDesc,id) => axios.post('/goods/edit', {name,category,price,imgUrl,goodsDesc,id})\n// 22.获取订单列表\nexport const API_ORDER_LIST = (currentPage,pageSize,orderNo,consignee, phone, orderState,date) => axios.get('/order/list',{ params: {currentPage,pageSize,orderNo,consignee, phone, orderState,date}})\n// currentPage\tint\t是\t当前页码\n// pageSize\tint\t是\t每页条数\n// orderNo\tstring\t否\t订单号\n// consignee\tstring\t否\t收货人\n// phone\tstring\t否\t手机号\n// orderState\tstring\t否\t订单状态\n// date\tstring\t否\t时间范围，字符串格类型如: [\"2019-10-05 00:00:00\",\"2019-10-10 00:00:00\"]\n// 23.查询\nexport const API_ORDER_SEARCH = (currentPage,pageSize,orderNo,consignee, phone, orderState,date) => axios.get('/order/search',{ params: {currentPage,pageSize,orderNo,consignee, phone, orderState,date}})\n// 参数\t类型\t是否必填\t参数说明\n// currentPage\tint\t是\t当前页码\n// pageSize\tint\t是\t每页条数\n// orderNo\tstring\t是\t订单号\n// consignee\tstring\t是\t收货人\n// phone\tstring\t是\t手机号\n// orderState\tstring\t是\t订单状态\n// date\tstring\t是\t时间范围，字符串格类型如: [\"2019-10-05 00:00:00\",\"2019-10-10 00:00:00\"]\n// 24.获取订单详情  id\tint  /order/detail\nexport const API_ORDER_DETAIL= (id) => axios.get('/order/detail',{ params: {id}})\n// 25.修改订单\n// id\tint\t是\t要修改账号的id\n// orderNo\tString\t是\t订单号\n// orderTime\tString\t是\t下单时间\n// phone\tString\t是\t电话\n// consignee\tString\t是\t收货人\n// deliverAddress\tString\t是\t送货地址\n// deliveryTime\tString\t是\t送达时间\n// remarks\tString\t是\t备注\n// orderAmount\tString\t是\t订单金额\n// orderState\tString\t是\t订单状态\nexport const API_ORDER_EDIT= (id,orderNo,orderTime,phone,consignee,deliverAddress,deliveryTime,remarks,orderAmount,orderState) => axios.post('/order/edit', {id,orderNo,orderTime,phone,consignee,deliverAddress,deliveryTime,remarks,orderAmount,orderState})\n// 26.获取店铺详情  \nexport const API_SHOP_INFO= () => axios.get('/shop/info',{ params: {}})\n// 27.店铺图片上传接口  \nexport const API_SHOP_UPLOAD = (id,cateName,state) => axios.post('/shop/upload', {id,cateName,state})\n// 28.店铺内容修改\n// id\tint\t是\t店铺id\n// name\tstring\t是\t店铺名称\n// bulletin\tstring\t是\t店铺公告\n// avatar\tstring\t是\t店铺头像\n// deliveryPrice\tint\t是\t起送价格\n// deliveryTime\tint\t是\t送达时间\n// description\tstring\t是\t店铺描述\n// score\tfloat\t是\t店铺好评率\n// sellCount\tint\t是\t店铺销量\n// supports\tstring数组\t是\t活动支持\n// date\tstring数组\t是\t营业时间\n// pics\tstring数组\t是\t图片\nexport const API_SHOP_EDIT = (params) => axios.post('/shop/edit', params)\n\n\n\n\n\n\n// 29.首页报表接口\nexport const API_ORDER_TOTALDATA= () => axios.get('/order/totaldata',{ params: {}})\n// 30.订单统计\n// 字符串格式数组，如[\"2019-10-01 00:00:00\", \"2019-10-10 00:00:00\"]\nexport const API_ORDER_ORDERTOTAL= (date) => axios.get('/order/ordertotal',{ params: {date}})\n\n\n\n\n\n\n\n\n\n\n\n"]}]}