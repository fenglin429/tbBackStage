{"remainingRequest":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fenglin/Desktop/study/backstage/src/pages/index/Order.vue?vue&type=style&index=0&id=a82aaf46&lang=less&scoped=true&","dependencies":[{"path":"/Users/fenglin/Desktop/study/backstage/src/pages/index/Order.vue","mtime":1591783012874},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/css-loader/dist/cjs.js","mtime":1590894352757},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1590894353459},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/postcss-loader/src/index.js","mtime":1590894353111},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/less-loader/dist/cjs.js","mtime":1591183686071},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js","mtime":1590894340264},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js","mtime":1590894353459}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYm94LWNhcmQgewogIG1hcmdpbjogMjBweDsKfQo="},{"version":3,"sources":["Order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+OA;AACA;AACA","file":"Order.vue","sourceRoot":"src/pages/index","sourcesContent":["<template>\n  <div>\n    <el-card class=\"box-card\">\n      <!-- 查询部分 -->\n      <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\n        <el-form-item label=\"订单号\">\n          <el-input v-model=\"formInline.orderNo\" placeholder=\"订单号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"收货人\">\n          <el-input v-model=\"formInline.consignee\" placeholder=\"收货人\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机号\">\n          <el-input v-model=\"formInline.phone\" placeholder=\"手机号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"订单状态\">\n          <el-select v-model=\"formInline.orderState\" placeholder=\"订单状态\">\n            <el-option label=\"已受理\" value=\"已受理\"></el-option>\n            <el-option label=\"已完成\" value=\"已完成\"></el-option>\n            <el-option label=\"派送中\" value=\"派送中\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-date-picker value-format=\"yyyy-MM-dd HH:mm:ss\" v-model=\"value1\" type=\"datetimerange\" range-separator=\"至\"\n          start-placeholder=\"开始日期\" end-placeholder=\"结束日期\">\n        </el-date-picker>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\n        </el-form-item>\n      </el-form>\n      <!-- 订单列表 -->\n      <el-table :data=\"tableData\" border style=\"width: 100%;margin-bottom: 20px;\">\n        <el-table-column fixed prop=\"orderNo\" label=\"订单号\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"orderTime\" label=\"下单时间\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"phone\" label=\"手机号\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"consignee\" label=\"收货人\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"deliverAddress\" label=\"配送地址\" width=\"200\"></el-table-column>\n        <el-table-column prop=\"deliveryTime\" label=\"送达时间\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"remarks\" label=\"用户备注\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"orderAmount\" label=\"订单金额\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"orderState\" label=\"订单状态\" width=\"100\"></el-table-column>\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <el-button @click=\"handleClick(scope.row)\" type=\"text\" size=\"small\">查看</el-button>\n            <el-button type=\"text\" size=\"small\"  @click=\"handleEdit(scope.$index, scope.row)\" >编辑</el-button>\n            \n          </template>\n        </el-table-column>\n\n      </el-table>\n         <!-- 编辑的模态框 -->\n         <el-dialog title=\"编辑商品信息\" :visible.sync=\"dialogFormVisible4Edit\">\n          <el-form :model=\"form\">\n            <el-form-item label=\"分类名称\" :label-width=\"formLabelWidth\">\n              <el-input v-model=\"form.cateName\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"分类名称\" :label-width=\"formLabelWidth\">\n              <el-input v-model=\"form.cateName\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"分类名称\" :label-width=\"formLabelWidth\">\n              <el-input v-model=\"form.cateName\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"分类名称\" :label-width=\"formLabelWidth\">\n              <el-input v-model=\"form.cateName\"></el-input>\n            </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogFormVisible4Edit = false\">取 消</el-button>\n            <!-- @click='affirmEdit_btn' -->\n            <!-- @click='edit_btn' -->\n            <el-button type=\"primary\">确 定</el-button>\n          </div>\n        </el-dialog>\n         <!-- 查看的模态框 -->\n         <el-dialog title=\"编辑商品信息\" :visible.sync=\"dialogFormVisible4Edit\">\n          <el-form :model=\"form\">\n            <el-form-item label=\"分类名称\" :label-width=\"formLabelWidth\">\n              <el-input v-model=\"form.cateName\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"分类名称\" :label-width=\"formLabelWidth\">\n              <el-input v-model=\"form.cateName\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"分类名称\" :label-width=\"formLabelWidth\">\n              <el-input v-model=\"form.cateName\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"分类名称\" :label-width=\"formLabelWidth\">\n              <el-input v-model=\"form.cateName\"></el-input>\n            </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogFormVisible4Edit = false\">取 消</el-button>\n            <!-- @click='affirmEdit_btn' -->\n            <!-- @click='edit_btn' -->\n            <el-button type=\"primary\">确 定</el-button>\n          </div>\n        </el-dialog>\n      <!-- 分页器:当前页码,每页条数-->\n      <!--page-sizes:每页条数的数组,page-sizes:可以选择的每页显示的条数,page-size: 默认每页显示的条数,pager:当前页-->\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"currentPage\"\n        :page-sizes=\"[5, 10, 15]\" :page-size=\"5\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination>\n    </el-card>\n\n\n  </div>\n</template>\n\n<script>\n  import {\n    API_ORDER_LIST,\n    API_ORDER_SEARCH\n  } from \"@/api/apis\";\n  export default {\n    data() {\n      return {\n        form: {\n          id: \"\",\n          state: '',\n          cateName: \"\",\n        },\n\n        // 分页:动态每页显示条数\n        pageSize: '5',\n        // 分页:动态当前页,第几页\n        currentPage: 1,\n        // 总条数\n        total: 0,\n        // 模态框的显示与否\n        dialogFormVisible4Edit:false,\n        formLabelWidth: '120px',\n        pickerOptions: {\n          shortcuts: [{\n              text: \"最近一周\",\n              onClick(picker) {\n                const end = new Date();\n                const start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            },\n            {\n              text: \"最近一个月\",\n              onClick(picker) {\n                const end = new Date();\n                const start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            },\n            {\n              text: \"最近三个月\",\n              onClick(picker) {\n                const end = new Date();\n                const start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }\n          ]\n        },\n        // 时间\n        value1: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\n        formInline: {\n          orderNo: '',\n          consignee: '',\n          phone: '',\n          orderState: ''\n        },\n        // 列表的数据\n        tableData: []\n      };\n    },\n    methods: {\n      // 参数\t类型\t是否必填\t参数说明\n      // currentPage\tint\t是\t当前页码\n      // pageSize\tint\t是\t每页条数\n      // orderNo\tstring\t是\t订单号\n      // consignee\tstring\t是\t收货人\n      // phone\tstring\t是\t手机号\n      // orderState\tstring\t是\t订单状态\n      // date\tstring\t是\t时间范围，字符串格类型如: [\"2019-10-05 00:00:00\",\"2019-10-10 00:00:00\"]\n      // 查询\n      onSubmit() {\n        console.log(this.value1);\n        API_ORDER_SEARCH(this.currentPage, this.pageSize, this.formInline.orderNo, this.formInline.consignee, this\n          .formInline.phone, this.formInline.orderState, this.value1).then(res => {\n          // console.log(res.data.data);\n          this.tableData = res.data.data\n          this.total = res.data.total\n          // console.log(res.data.total);\n        })\n      },\n      handleClick(row) {\n        console.log(row);\n      },\n      // 分页:动态每页显示条数\n      handleSizeChange(val) {\n        // console.log(`${val}`);\n        this.pageSize = val; //动态改变\n        // 请求列表\n        this.orderList(this.currentPage)\n        // console.log(this.pageSize);\n        // 改变之后应该停留在当前的页面\n      },\n      // 分页:动态当前页,第几页\n      handleCurrentChange(val) {\n        // console.log(`${val}`);\n        this.currentPage = val;\n        // 请求列表\n        this.orderList(this.currentPage)\n        // console.log(this.currentPage);\n      },\n      //  获取列表\n      orderList() {\n        API_ORDER_LIST(this.currentPage, this.pageSize).then(res => {\n          // console.log(res.data);\n          this.tableData = res.data.data\n          this.total = res.data.total\n        })\n      },\n      // 编辑模态框的显示与隐藏\n       handleEdit(index, row) {\n        // console.log(row);\n        // 显示模态框\n        this.dialogFormVisible4Edit = true;\n        // 复制给 form\n        this.form = row;\n        // console.log(this.form);\n        \n\n      },\n\n    },\n    created() {\n      // 获取列表\n      this.orderList(this.currentPage)\n    },\n  };\n</script>\n\n<style lang=\"less\" scoped>\n  .box-card {\n    margin: 20px;\n  }\n</style>"]}]}