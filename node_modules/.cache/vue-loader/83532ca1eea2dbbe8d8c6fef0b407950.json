{"remainingRequest":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fenglin/Desktop/study/backstage/src/pages/index/statistics/Indent.vue?vue&type=style&index=0&id=0ed34641&lang=less&scoped=true&","dependencies":[{"path":"/Users/fenglin/Desktop/study/backstage/src/pages/index/statistics/Indent.vue","mtime":1591889448996},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/css-loader/dist/cjs.js","mtime":1590894352757},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1590894353459},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/postcss-loader/src/index.js","mtime":1590894353111},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/less-loader/dist/cjs.js","mtime":1591183686071},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js","mtime":1590894340264},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js","mtime":1590894353459}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtcmFuZ2UtZWRpdG9yLmVsLWlucHV0X19pbm5lciB7CiAgbWFyZ2luOiAwIDEwcHggMTBweDsKfQo="},{"version":3,"sources":["Indent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4OA;AACA;AACA","file":"Indent.vue","sourceRoot":"src/pages/index/statistics","sourcesContent":["<template>\n  <div>\n    <div>\n      <span>时间范围</span>\n      <el-date-picker v-model=\"value1\" format='yyyy-MM-dd' value-format='yyyy-MM-dd' type=\"datetimerange\"\n        start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" :default-time=\"['00:00:00']\">\n      </el-date-picker>\n      <el-button @click='inquire' type=\"primary\">查询</el-button>\n    </div>\n\n    <el-card class=\"box-card\">\n      <div id=\"myCharts\" style=\"width: 1000px;height: 400px;\">\n\n      </div>\n\n    </el-card>\n  </div>\n</template>\n\n<script>\n  // // 1.引入\n  import echarts from 'echarts'\n\n  import {\n    API_ORDER_ORDERTOTAL\n  } from \"@/api/apis\";\n  export default {\n    data() {\n      return {\n        options: {},\n        pickerOptions: {\n          shortcuts: [{\n            text: '最近一周',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n              picker.$emit('pick', [start, end]);\n            }\n          }, {\n            text: '最近一个月',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n              picker.$emit('pick', [start, end]);\n            }\n          }, {\n            text: '最近三个月',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n              picker.$emit('pick', [start, end]);\n            }\n          }]\n        },\n        value1: [],\n      };\n    },\n    // 时间\n    methods: {\n      inquire() {\n        console.log(this.value1);\n        \n        API_ORDER_ORDERTOTAL(JSON.stringify(this.value1)).then(res => {\n          let days = res.data.data.map(i => {\n            return i.day;\n          });\n          let counts = res.data.data.map(i => {\n            return i.count;\n          })\n          this.options= {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                crossStyle: {\n                  color: '#999'\n                }\n              }\n            },\n            toolbox: {\n              feature: {\n                dataView: {\n                  show: true,\n                  readOnly: false\n                },\n                magicType: {\n                  show: true,\n                  type: ['line', 'bar']\n                },\n                restore: {\n                  show: true\n                },\n                saveAsImage: {\n                  show: true\n                }\n              }\n            },\n            legend: {\n              data: ['销量']\n            },\n            xAxis: [{\n              type: 'category',\n              data: days,\n              axisPointer: {\n                type: 'shadow'\n              }\n            }],\n            yAxis: [{\n              type: 'value',\n              name: '销量',\n              min: 0,\n              max: 250,\n              interval: 50,\n              axisLabel: {\n                formatter: '{value} 元'\n              }\n            }],\n            series: [{\n                name: '销量',\n                type: 'bar',\n                data: counts\n              },\n              {\n                name: '销量趋势',\n                type: 'line',\n                yAxisIndex: 0,\n                data: counts\n              }\n            ]\n          };\n          var myCharts = echarts.init(document.getElementById('myCharts'));\n          // 开启圈圈圆圆\n          myCharts.showLoading()\n          myCharts.setOption(this.options);\n          myCharts.hideLoading();\n        });\n        // console.log(this.value1);\n        // 字符串格式数组，如[\"2019-10-01 00:00:00\", \"2019-10-10 00:00:00\"]\n      }\n    },\n    mounted() {\n      var currentDate = new Date();\n      //返回date是一周中的某一天\n      var week = currentDate.getDay();\n      //一天的毫秒数\n      var millisecond = 1000 * 60 * 60 * 24;\n      //减去的天数\n      var minusDay = week != 0 ? week - 1 : 6;\n      //alert(minusDay);\n      //本周 周一\n      var monday = new Date(currentDate.getTime() - (minusDay * millisecond));\n      //本周 周日\n      var sunday = new Date(monday.getTime() + (6 * millisecond));\n      this.value1.push(monday);\n      this.value1.push(sunday);\n      API_ORDER_ORDERTOTAL(JSON.stringify(this.value1)).then(res => {\n          let days = res.data.data.map(i => {\n            return i.day;\n          });\n          let counts = res.data.data.map(i => {\n            return i.count;\n          })\n          this.options= {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                crossStyle: {\n                  color: '#999'\n                }\n              }\n            },\n            toolbox: {\n              feature: {\n                dataView: {\n                  show: true,\n                  readOnly: false\n                },\n                magicType: {\n                  show: true,\n                  type: ['line', 'bar']\n                },\n                restore: {\n                  show: true\n                },\n                saveAsImage: {\n                  show: true\n                }\n              }\n            },\n            legend: {\n              data: ['销量']\n            },\n            xAxis: [{\n              type: 'category',\n              data: days,\n              axisPointer: {\n                type: 'shadow'\n              }\n            }],\n            yAxis: [{\n              type: 'value',\n              name: '销量',\n              min: 0,\n              max: 250,\n              interval: 50,\n              axisLabel: {\n                formatter: '{value} 元'\n              }\n            }],\n            series: [{\n                name: '销量',\n                type: 'bar',\n                data: counts\n              },\n              {\n                name: '销量趋势',\n                type: 'line',\n                yAxisIndex: 0,\n                data: counts\n              }\n            ]\n          };\n          var myCharts = echarts.init(document.getElementById('myCharts'));\n          // 开启圈圈圆圆\n          myCharts.showLoading()\n          myCharts.setOption(this.options);\n          myCharts.hideLoading();\n        });\n      }}\n</script>\n\n<style lang=\"less\" scoped>\n  .el-range-editor.el-input__inner {\n    margin: 0 10px 10px;\n  }\n</style>"]}]}