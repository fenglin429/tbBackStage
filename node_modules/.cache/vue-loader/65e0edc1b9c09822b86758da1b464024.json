{"remainingRequest":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fenglin/Desktop/study/backstage/src/pages/index/Order.vue?vue&type=style&index=0&id=4809fcc2&lang=less&scoped=true&","dependencies":[{"path":"/Users/fenglin/Desktop/study/backstage/src/pages/index/Order.vue","mtime":1591923085509},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/css-loader/dist/cjs.js","mtime":1590894352757},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1590894353459},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/postcss-loader/src/index.js","mtime":1590894353111},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/less-loader/dist/cjs.js","mtime":1591183686071},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js","mtime":1590894340264},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js","mtime":1590894353459}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYm94LWNhcmQgewogIG1hcmdpbjogMjBweDsKfQo="},{"version":3,"sources":["Order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6TA;AACA;AACA","file":"Order.vue","sourceRoot":"src/pages/index","sourcesContent":["<template>\n  <div>\n    <el-card class=\"box-card\">\n      <!-- 查询部分 -->\n      <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\n        <el-form-item label=\"订单号\">\n          <el-input v-model=\"formInline.orderNo\" placeholder=\"订单号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"收货人\">\n          <el-input v-model=\"formInline.consignee\" placeholder=\"收货人\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机号\">\n          <el-input v-model=\"formInline.phone\" placeholder=\"手机号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"订单状态\">\n          <el-select v-model=\"formInline.orderState\" placeholder=\"订单状态\">\n            <el-option label=\"已受理\" value=\"已受理\"></el-option>\n            <el-option label=\"已完成\" value=\"已完成\"></el-option>\n            <el-option label=\"派送中\" value=\"派送中\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-date-picker  v-model=\"value1\" type=\"datetimerange\" range-separator=\"至\"\n          start-placeholder=\"开始日期\" end-placeholder=\"结束日期\">\n        </el-date-picker>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\n        </el-form-item>\n      </el-form>\n      <!-- 订单列表 -->\n      <el-table :data=\"tableData\" border style=\"width: 100%;margin-bottom: 20px;\">\n        <el-table-column fixed prop=\"orderNo\" label=\"订单号\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"orderTime\" label=\"下单时间\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"phone\" label=\"手机号\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"consignee\" label=\"收货人\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"deliverAddress\" label=\"配送地址\" width=\"200\"></el-table-column>\n        <el-table-column prop=\"deliveryTime\" label=\"送达时间\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"remarks\" label=\"用户备注\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"orderAmount\" label=\"订单金额\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"orderState\" label=\"订单状态\" width=\"100\"></el-table-column>\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <el-button @click=\"handleClick(scope.row)\" type=\"text\" size=\"small\">查看</el-button>\n            <el-button type=\"text\" size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n\n          </template>\n        </el-table-column>\n\n      </el-table>\n      <!-- 编辑的模态框 -->\n      <el-dialog title=\"编辑订单信息\" :visible.sync=\"dialogFormVisible4Edit\">\n        <el-form :model=\"editData\">\n          <el-form-item label=\"\t订单id\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"editData.id\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"订单号\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"editData.orderNo\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"下单时间\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"editData.deliveryTime\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"联系电话\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"editData.phone\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"收货人\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"editData.consignee\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"送货地址\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"editData.deliverAddress\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"送达时间\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"editData.orderTime\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"备注\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"editData.remarks\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"订单金额\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"editData.orderAmount\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"订单状态\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"editData.orderState\"></el-input>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogFormVisible4Edit = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"edit_btn\">确 定</el-button>\n        </div>\n      </el-dialog>\n      <!-- 查看的模态框 -->\n      <el-dialog title=\"查看订单信息\" :visible.sync=\"dialogFormVisible4Detail\">\n        <el-form :model=\"detailData\">\n          <el-form-item label=\"订单数据对象\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"detailData.cateName\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"\t订单id\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"detailData.id\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"订单号\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"detailData.orderNo\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"下单时间\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"detailData.orderTime\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"联系电话\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"detailData.phone\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"收货人\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"detailData.consignee\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"送货地址\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"detailData.deliverAddress\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"送达时间\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"detailData.deliveryTime\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"备注\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"detailData.remarks\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"订单金额\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"detailData.orderAmount\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"订单状态\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"detailData.orderState\" disabled></el-input>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogFormVisible4Detail = false\">取 消</el-button>\n          <!-- dialogFormVisible4 = false -->\n          <el-button type=\"primary\" @click=\"dialogFormVisible4Detail = false\">确 定</el-button>\n        </div>\n      </el-dialog>\n      <!-- 分页器:当前页码,每页条数-->\n      <!--page-sizes:每页条数的数组,page-sizes:可以选择的每页显示的条数,page-size: 默认每页显示的条数,pager:当前页-->\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"currentPage\"\n        :page-sizes=\"[5, 10, 15]\" :page-size=\"5\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination>\n    </el-card>\n  </div>\n</template>\n\n<script>\n  import {\n    API_ORDER_LIST,\n    // API_ORDER_SEARCH,\n    API_ORDER_DETAIL,\n    API_ORDER_EDIT\n  } from \"@/api/apis\";\n  import moment from \"moment\";\n  export default {\n    data() {\n      return {\n        // 查看订单详情的数据列表\n        detailData: [],\n        // 编辑订单详情的数据列表\n        editData: {},\n        // 获取列表需要的 id\n        detailId: 0,\n        // 分页:动态每页显示条数\n        pageSize: '5',\n        // 分页:动态当前页,第几页\n        currentPage: 1,\n        // 总条数\n        total: 0,\n        // 模态框的显示与否\n        dialogFormVisible4Edit: false,\n        dialogFormVisible4Detail: false,\n        formLabelWidth: '120px',\n        pickerOptions: {\n          shortcuts: [{\n              text: \"最近一周\",\n              onClick(picker) {\n                const end = new Date();\n                const start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            },\n            {\n              text: \"最近一个月\",\n              onClick(picker) {\n                const end = new Date();\n                const start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            },\n            {\n              text: \"最近三个月\",\n              onClick(picker) {\n                const end = new Date();\n                const start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }\n          ]\n        },\n        // 时间\n        value1: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\n        formInline: {\n          orderNo: '',\n          consignee: '',\n          phone: '',\n          orderState: ''\n        },\n        // 列表的数据\n        tableData: []\n      };\n    },\n    methods: {\n      // 查询 \n      onSubmit() {\n        // console.log('1',this.value1);\n        API_ORDER_LIST(1, this.pageSize, this.formInline.orderNo, this.formInline.consignee, this\n          .formInline.phone, this.formInline.orderState, this.value1).then(res => {\n          this.tableData = res.data.data\n          this.total = res.data.total\n          // console.log(res.data.total);\n          // this.orderList(this.currentPage)\n        })\n      },\n      // 分页:动态每页显示条数\n      handleSizeChange(val) {\n        // console.log(`${val}`);\n        this.pageSize = val; //动态改变\n        // 请求列表\n        // 改变之后应该停留在当前的页面\n        this.orderList(this.currentPage)\n        // console.log(this.pageSize);\n      },\n      // 分页:动态当前页,第几页\n      handleCurrentChange(val) {\n        // console.log(`${val}`);\n        this.currentPage = val;\n        // 请求列表\n        this.orderList(this.currentPage)\n\n        // this.orderList(this.currentPage)\n        // console.log(this.currentPage);\n\n      },\n      //  获取列表\n      orderList() {\n        API_ORDER_LIST(this.currentPage, this.pageSize, this.formInline.orderNo, this.formInline.consignee, this\n          .formInline.phone, this.formInline.orderState, this.value1).then(res => {\n          // console.log('数据', res.data);\n          this.tableData = res.data.data\n          this.total = res.data.total\n          this.tableData.forEach(v => {\n            // console.log(\"v\",v.deliveryTime);\n            v.deliveryTime = moment(v.deliveryTime).format(\"YYYY-MM-DD hh:mm:ss\")\n            // console.log(v.deliveryTime);\n            \n            v.orderTime = moment(v.orderTime).format(\"YYYY-MM-DD hh:mm:ss\")\n          })\n\n        })\n      },\n      // 查看模态框的显示和隐藏\n      handleClick(row) {\n        // console.log('查看', row.id);\n        this.dialogFormVisible4Detail = true;\n        // 发送请求\n        API_ORDER_DETAIL(row.id).then(res => {\n          this.detailData = res.data.data\n          // console.log('请求的数据',res.data.data);\n        })\n      },\n      // 编辑模态框的显示与隐藏\n      handleEdit(index, row) {\n        console.log('编辑', row);\n        // 显示模态框\n        this.dialogFormVisible4Edit = true;\n        // 复制给 form\n        this.editData = row;\n        console.log(this.editData);\n      },\n      // 编辑信息,发送请求\n      edit_btn() {\n\n        // \tString\t是\t下单时间\n        // \tString\t是\t电话\n        // \tString\t是\t收货人\n        // \tString\t是\t送货地址\n        // String\t是\t送达时间\n        // \tString\t是\t备注\n        // \tString\t是\t订单金额\n        // \tString\t是\t订单状态\n        API_ORDER_EDIT(this.editData.id, this.editData.orderNo, this.editData.orderTime, this.editData.phone, this\n          .editData.consignee, this.editData.deliverAddress, this.editData.deliveryTime, this.editData.remarks, this\n          .editData.orderAmount, this.editData.orderState).then(res => {\n          console.log(res);\n          if (res.data.code == 0) {\n            //   // 隐藏模态框\n            this.dialogFormVisible4Edit = false;\n            this.$message({\n              showClose: true,\n              message: \"编辑成功~\",\n              type: \"success\"\n            });\n          }\n\n\n        })\n\n\n\n      }\n\n    },\n    created() {\n      // 获取列表\n      this.orderList(this.currentPage)\n    },\n  };\n</script>\n\n<style lang=\"less\" scoped>\n  .box-card {\n    margin: 20px;\n  }\n</style>"]}]}