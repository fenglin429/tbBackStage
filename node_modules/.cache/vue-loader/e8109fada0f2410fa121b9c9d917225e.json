{"remainingRequest":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fenglin/Desktop/study/backstage/src/pages/index/statistics/Indent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fenglin/Desktop/study/backstage/src/pages/index/statistics/Indent.vue","mtime":1591889448996},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js","mtime":1590894340264},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/babel-loader/lib/index.js","mtime":1590894340261},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/cache-loader/dist/cjs.js","mtime":1590894340264},{"path":"/Users/fenglin/Desktop/study/backstage/node_modules/vue-loader/lib/index.js","mtime":1590894353459}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIC8vIDEu5byV5YWlCmltcG9ydCBlY2hhcnRzIGZyb20gJ2VjaGFydHMnCgppbXBvcnQgewogIEFQSV9PUkRFUl9PUkRFUlRPVEFMCn0gZnJvbSAiQC9hcGkvYXBpcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3B0aW9uczoge30sCiAgICAgIHBpY2tlck9wdGlvbnM6IHsKICAgICAgICBzaG9ydGN1dHM6IFt7CiAgICAgICAgICB0ZXh0OiAn5pyA6L+R5LiA5ZGoJywKICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgc3RhcnQuc2V0VGltZShzdGFydC5nZXRUaW1lKCkgLSAzNjAwICogMTAwMCAqIDI0ICogNyk7CiAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIFtzdGFydCwgZW5kXSk7CiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgdGV4dDogJ+acgOi/keS4gOS4quaciCcsCiAgICAgICAgICBvbkNsaWNrKHBpY2tlcikgewogICAgICAgICAgICBjb25zdCBlbmQgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIHN0YXJ0LnNldFRpbWUoc3RhcnQuZ2V0VGltZSgpIC0gMzYwMCAqIDEwMDAgKiAyNCAqIDMwKTsKICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKTsKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICB0ZXh0OiAn5pyA6L+R5LiJ5Liq5pyIJywKICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgc3RhcnQuc2V0VGltZShzdGFydC5nZXRUaW1lKCkgLSAzNjAwICogMTAwMCAqIDI0ICogOTApOwogICAgICAgICAgICBwaWNrZXIuJGVtaXQoJ3BpY2snLCBbc3RhcnQsIGVuZF0pOwogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH0sCiAgICAgIHZhbHVlMTogW10sCiAgICB9OwogIH0sCiAgLy8g5pe26Ze0CiAgbWV0aG9kczogewogICAgaW5xdWlyZSgpIHsKICAgICAgY29uc29sZS5sb2codGhpcy52YWx1ZTEpOwogICAgICAKICAgICAgQVBJX09SREVSX09SREVSVE9UQUwoSlNPTi5zdHJpbmdpZnkodGhpcy52YWx1ZTEpKS50aGVuKHJlcyA9PiB7CiAgICAgICAgbGV0IGRheXMgPSByZXMuZGF0YS5kYXRhLm1hcChpID0+IHsKICAgICAgICAgIHJldHVybiBpLmRheTsKICAgICAgICB9KTsKICAgICAgICBsZXQgY291bnRzID0gcmVzLmRhdGEuZGF0YS5tYXAoaSA9PiB7CiAgICAgICAgICByZXR1cm4gaS5jb3VudDsKICAgICAgICB9KQogICAgICAgIHRoaXMub3B0aW9ucz0gewogICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgICAgdHlwZTogJ2Nyb3NzJywKICAgICAgICAgICAgICBjcm9zc1N0eWxlOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJyM5OTknCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgdG9vbGJveDogewogICAgICAgICAgICBmZWF0dXJlOiB7CiAgICAgICAgICAgICAgZGF0YVZpZXc6IHsKICAgICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgICByZWFkT25seTogZmFsc2UKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG1hZ2ljVHlwZTogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICAgIHR5cGU6IFsnbGluZScsICdiYXInXQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgcmVzdG9yZTogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHsKICAgICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgICAgZGF0YTogWyfplIDph48nXQogICAgICAgICAgfSwKICAgICAgICAgIHhBeGlzOiBbewogICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICBkYXRhOiBkYXlzLAogICAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICAgIHR5cGU6ICdzaGFkb3cnCiAgICAgICAgICAgIH0KICAgICAgICAgIH1dLAogICAgICAgICAgeUF4aXM6IFt7CiAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICAgIG5hbWU6ICfplIDph48nLAogICAgICAgICAgICBtaW46IDAsCiAgICAgICAgICAgIG1heDogMjUwLAogICAgICAgICAgICBpbnRlcnZhbDogNTAsCiAgICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICAgIGZvcm1hdHRlcjogJ3t2YWx1ZX0g5YWDJwogICAgICAgICAgICB9CiAgICAgICAgICB9XSwKICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgICBuYW1lOiAn6ZSA6YePJywKICAgICAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgICAgICBkYXRhOiBjb3VudHMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICfplIDph4/otovlir8nLAogICAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgICB5QXhpc0luZGV4OiAwLAogICAgICAgICAgICAgIGRhdGE6IGNvdW50cwogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfTsKICAgICAgICB2YXIgbXlDaGFydHMgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215Q2hhcnRzJykpOwogICAgICAgIC8vIOW8gOWQr+WciOWciOWchuWchgogICAgICAgIG15Q2hhcnRzLnNob3dMb2FkaW5nKCkKICAgICAgICBteUNoYXJ0cy5zZXRPcHRpb24odGhpcy5vcHRpb25zKTsKICAgICAgICBteUNoYXJ0cy5oaWRlTG9hZGluZygpOwogICAgICB9KTsKICAgICAgLy8gY29uc29sZS5sb2codGhpcy52YWx1ZTEpOwogICAgICAvLyDlrZfnrKbkuLLmoLzlvI/mlbDnu4TvvIzlpoJbIjIwMTktMTAtMDEgMDA6MDA6MDAiLCAiMjAxOS0xMC0xMCAwMDowMDowMCJdCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdmFyIGN1cnJlbnREYXRlID0gbmV3IERhdGUoKTsKICAgIC8v6L+U5ZueZGF0ZeaYr+S4gOWRqOS4reeahOafkOS4gOWkqQogICAgdmFyIHdlZWsgPSBjdXJyZW50RGF0ZS5nZXREYXkoKTsKICAgIC8v5LiA5aSp55qE5q+r56eS5pWwCiAgICB2YXIgbWlsbGlzZWNvbmQgPSAxMDAwICogNjAgKiA2MCAqIDI0OwogICAgLy/lh4/ljrvnmoTlpKnmlbAKICAgIHZhciBtaW51c0RheSA9IHdlZWsgIT0gMCA/IHdlZWsgLSAxIDogNjsKICAgIC8vYWxlcnQobWludXNEYXkpOwogICAgLy/mnKzlkagg5ZGo5LiACiAgICB2YXIgbW9uZGF5ID0gbmV3IERhdGUoY3VycmVudERhdGUuZ2V0VGltZSgpIC0gKG1pbnVzRGF5ICogbWlsbGlzZWNvbmQpKTsKICAgIC8v5pys5ZGoIOWRqOaXpQogICAgdmFyIHN1bmRheSA9IG5ldyBEYXRlKG1vbmRheS5nZXRUaW1lKCkgKyAoNiAqIG1pbGxpc2Vjb25kKSk7CiAgICB0aGlzLnZhbHVlMS5wdXNoKG1vbmRheSk7CiAgICB0aGlzLnZhbHVlMS5wdXNoKHN1bmRheSk7CiAgICBBUElfT1JERVJfT1JERVJUT1RBTChKU09OLnN0cmluZ2lmeSh0aGlzLnZhbHVlMSkpLnRoZW4ocmVzID0+IHsKICAgICAgICBsZXQgZGF5cyA9IHJlcy5kYXRhLmRhdGEubWFwKGkgPT4gewogICAgICAgICAgcmV0dXJuIGkuZGF5OwogICAgICAgIH0pOwogICAgICAgIGxldCBjb3VudHMgPSByZXMuZGF0YS5kYXRhLm1hcChpID0+IHsKICAgICAgICAgIHJldHVybiBpLmNvdW50OwogICAgICAgIH0pCiAgICAgICAgdGhpcy5vcHRpb25zPSB7CiAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgICB0eXBlOiAnY3Jvc3MnLAogICAgICAgICAgICAgIGNyb3NzU3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAnIzk5OScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgICBkYXRhVmlldzogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICAgIHJlYWRPbmx5OiBmYWxzZQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbWFnaWNUeXBlOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgdHlwZTogWydsaW5lJywgJ2JhciddCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICByZXN0b3JlOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBzYXZlQXNJbWFnZTogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICBkYXRhOiBbJ+mUgOmHjyddCiAgICAgICAgICB9LAogICAgICAgICAgeEF4aXM6IFt7CiAgICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICAgIGRhdGE6IGRheXMsCiAgICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgICAgdHlwZTogJ3NoYWRvdycKICAgICAgICAgICAgfQogICAgICAgICAgfV0sCiAgICAgICAgICB5QXhpczogW3sKICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJywKICAgICAgICAgICAgbmFtZTogJ+mUgOmHjycsCiAgICAgICAgICAgIG1pbjogMCwKICAgICAgICAgICAgbWF4OiAyNTAsCiAgICAgICAgICAgIGludGVydmFsOiA1MCwKICAgICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfSDlhYMnCiAgICAgICAgICAgIH0KICAgICAgICAgIH1dLAogICAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgICAgIG5hbWU6ICfplIDph48nLAogICAgICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgICAgIGRhdGE6IGNvdW50cwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogJ+mUgOmHj+i2i+WKvycsCiAgICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICAgIHlBeGlzSW5kZXg6IDAsCiAgICAgICAgICAgICAgZGF0YTogY291bnRzCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9OwogICAgICAgIHZhciBteUNoYXJ0cyA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbXlDaGFydHMnKSk7CiAgICAgICAgLy8g5byA5ZCv5ZyI5ZyI5ZyG5ZyGCiAgICAgICAgbXlDaGFydHMuc2hvd0xvYWRpbmcoKQogICAgICAgIG15Q2hhcnRzLnNldE9wdGlvbih0aGlzLm9wdGlvbnMpOwogICAgICAgIG15Q2hhcnRzLmhpZGVMb2FkaW5nKCk7CiAgICAgIH0pOwogICAgfX0K"},{"version":3,"sources":["Indent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"Indent.vue","sourceRoot":"src/pages/index/statistics","sourcesContent":["<template>\n  <div>\n    <div>\n      <span>时间范围</span>\n      <el-date-picker v-model=\"value1\" format='yyyy-MM-dd' value-format='yyyy-MM-dd' type=\"datetimerange\"\n        start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" :default-time=\"['00:00:00']\">\n      </el-date-picker>\n      <el-button @click='inquire' type=\"primary\">查询</el-button>\n    </div>\n\n    <el-card class=\"box-card\">\n      <div id=\"myCharts\" style=\"width: 1000px;height: 400px;\">\n\n      </div>\n\n    </el-card>\n  </div>\n</template>\n\n<script>\n  // // 1.引入\n  import echarts from 'echarts'\n\n  import {\n    API_ORDER_ORDERTOTAL\n  } from \"@/api/apis\";\n  export default {\n    data() {\n      return {\n        options: {},\n        pickerOptions: {\n          shortcuts: [{\n            text: '最近一周',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n              picker.$emit('pick', [start, end]);\n            }\n          }, {\n            text: '最近一个月',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n              picker.$emit('pick', [start, end]);\n            }\n          }, {\n            text: '最近三个月',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n              picker.$emit('pick', [start, end]);\n            }\n          }]\n        },\n        value1: [],\n      };\n    },\n    // 时间\n    methods: {\n      inquire() {\n        console.log(this.value1);\n        \n        API_ORDER_ORDERTOTAL(JSON.stringify(this.value1)).then(res => {\n          let days = res.data.data.map(i => {\n            return i.day;\n          });\n          let counts = res.data.data.map(i => {\n            return i.count;\n          })\n          this.options= {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                crossStyle: {\n                  color: '#999'\n                }\n              }\n            },\n            toolbox: {\n              feature: {\n                dataView: {\n                  show: true,\n                  readOnly: false\n                },\n                magicType: {\n                  show: true,\n                  type: ['line', 'bar']\n                },\n                restore: {\n                  show: true\n                },\n                saveAsImage: {\n                  show: true\n                }\n              }\n            },\n            legend: {\n              data: ['销量']\n            },\n            xAxis: [{\n              type: 'category',\n              data: days,\n              axisPointer: {\n                type: 'shadow'\n              }\n            }],\n            yAxis: [{\n              type: 'value',\n              name: '销量',\n              min: 0,\n              max: 250,\n              interval: 50,\n              axisLabel: {\n                formatter: '{value} 元'\n              }\n            }],\n            series: [{\n                name: '销量',\n                type: 'bar',\n                data: counts\n              },\n              {\n                name: '销量趋势',\n                type: 'line',\n                yAxisIndex: 0,\n                data: counts\n              }\n            ]\n          };\n          var myCharts = echarts.init(document.getElementById('myCharts'));\n          // 开启圈圈圆圆\n          myCharts.showLoading()\n          myCharts.setOption(this.options);\n          myCharts.hideLoading();\n        });\n        // console.log(this.value1);\n        // 字符串格式数组，如[\"2019-10-01 00:00:00\", \"2019-10-10 00:00:00\"]\n      }\n    },\n    mounted() {\n      var currentDate = new Date();\n      //返回date是一周中的某一天\n      var week = currentDate.getDay();\n      //一天的毫秒数\n      var millisecond = 1000 * 60 * 60 * 24;\n      //减去的天数\n      var minusDay = week != 0 ? week - 1 : 6;\n      //alert(minusDay);\n      //本周 周一\n      var monday = new Date(currentDate.getTime() - (minusDay * millisecond));\n      //本周 周日\n      var sunday = new Date(monday.getTime() + (6 * millisecond));\n      this.value1.push(monday);\n      this.value1.push(sunday);\n      API_ORDER_ORDERTOTAL(JSON.stringify(this.value1)).then(res => {\n          let days = res.data.data.map(i => {\n            return i.day;\n          });\n          let counts = res.data.data.map(i => {\n            return i.count;\n          })\n          this.options= {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                crossStyle: {\n                  color: '#999'\n                }\n              }\n            },\n            toolbox: {\n              feature: {\n                dataView: {\n                  show: true,\n                  readOnly: false\n                },\n                magicType: {\n                  show: true,\n                  type: ['line', 'bar']\n                },\n                restore: {\n                  show: true\n                },\n                saveAsImage: {\n                  show: true\n                }\n              }\n            },\n            legend: {\n              data: ['销量']\n            },\n            xAxis: [{\n              type: 'category',\n              data: days,\n              axisPointer: {\n                type: 'shadow'\n              }\n            }],\n            yAxis: [{\n              type: 'value',\n              name: '销量',\n              min: 0,\n              max: 250,\n              interval: 50,\n              axisLabel: {\n                formatter: '{value} 元'\n              }\n            }],\n            series: [{\n                name: '销量',\n                type: 'bar',\n                data: counts\n              },\n              {\n                name: '销量趋势',\n                type: 'line',\n                yAxisIndex: 0,\n                data: counts\n              }\n            ]\n          };\n          var myCharts = echarts.init(document.getElementById('myCharts'));\n          // 开启圈圈圆圆\n          myCharts.showLoading()\n          myCharts.setOption(this.options);\n          myCharts.hideLoading();\n        });\n      }}\n</script>\n\n<style lang=\"less\" scoped>\n  .el-range-editor.el-input__inner {\n    margin: 0 10px 10px;\n  }\n</style>"]}]}